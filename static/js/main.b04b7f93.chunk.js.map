{"version":3,"sources":["Components/Bar.jsx","Components/Bars.jsx","Utils/generateId.js","Components/Input.jsx","Hooks/useStartStop.jsx","Utils/sort.js","Pages/Home.jsx","index.jsx"],"names":["Bar","value","index","colors","style","width","height","backgroundColor","length","Bars","arr","setArr","display","justifyContent","alignItems","map","id","gen4","Math","random","toString","slice","generateId","prefix","concat","join","Input","speed","setSpeed","updateArray","type","setType","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","droppableId","provided","className","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","defaultValue","onChange","e","newArr","updateElement","Number","target","onClick","idToRemove","filter","removeElement","placeholder","addElement","min","max","name","useStartStop","callback","delay","callbackRef","useRef","useState","intervalId","setIntervalId","isActive","setIsActive","useEffect","current","setInterval","console","log","clearInterval","Sort","this","iteration","isSorted","element","i1","i2","temp","i","swap","minIndex","checkSorted","DEFAULT_ARRAY","Home","sort","iterate","start","stop","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.b04b7f93.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Bar = ({ value, index }) => {\r\n  const colors = ['blue', 'black', 'red', 'green', 'purple']\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '20px',\r\n        height: value * 10,\r\n        backgroundColor: colors[index % colors.length],\r\n      }}\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default Bar\r\n","import React from 'react'\r\nimport Bar from './Bar'\r\n\r\nconst Bars = ({ arr, setArr }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n      }}\r\n    >\r\n      {arr.map(({ value, id }, index) => {\r\n        return <Bar value={value} key={id} index={index} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bars\r\n","const gen4 = () => {\r\n  return Math.random().toString(16).slice(-4)\r\n}\r\n\r\nexport const generateId = (prefix) => {\r\n  return (prefix || '').concat(\r\n    [gen4(), gen4(), gen4(), gen4(), gen4(), gen4(), gen4(), gen4()].join('')\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { generateId } from '../Utils/generateId.js'\r\n\r\nconst Input = ({ arr, speed, setSpeed, updateArray, type, setType }) => {\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return\r\n    }\r\n\r\n    const items = Array.from(arr)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n    updateArray(items)\r\n  }\r\n\r\n  const updateElement = (index, value) => {\r\n    const newArr = [...arr]\r\n    newArr[index].value = value\r\n\r\n    updateArray(newArr)\r\n  }\r\n\r\n  const addElement = () => {\r\n    const newArr = [...arr, { id: generateId(), value: 0 }]\r\n\r\n    updateArray(newArr)\r\n  }\r\n\r\n  const removeElement = (idToRemove) => {\r\n    const newArr = arr.filter(({ id, value }) => id !== idToRemove)\r\n\r\n    updateArray(newArr)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId='input_array'>\r\n          {(provided) => (\r\n            <ul\r\n              className='input_array'\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {arr.map(({ id, value }, index) => {\r\n                return (\r\n                  <Draggable key={id} draggableId={id} index={index}>\r\n                    {(provided) => (\r\n                      <li\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <input\r\n                          type='number'\r\n                          defaultValue={value}\r\n                          onChange={(e) => {\r\n                            updateElement(index, Number(e.target.value))\r\n                          }}\r\n                        />\r\n                        <button\r\n                          onClick={() => {\r\n                            removeElement(id)\r\n                          }}\r\n                        >\r\n                          -\r\n                        </button>\r\n                      </li>\r\n                    )}\r\n                  </Draggable>\r\n                )\r\n              })}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <button\r\n        onClick={() => {\r\n          addElement()\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      <input\r\n        min='100'\r\n        max='2000'\r\n        type='range'\r\n        value={speed}\r\n        onChange={(e) => {\r\n          setSpeed(Number(e.target.value))\r\n        }}\r\n      />\r\n      <select\r\n        name='type'\r\n        id='type'\r\n        value={type}\r\n        onChange={(e) => {\r\n          setType(e.target.value)\r\n        }}\r\n      >\r\n        <option value='bubble'>Bubble</option>\r\n        <option value='selection'>Selection</option>\r\n        <option value='insertion'>Insertion</option>\r\n      </select>\r\n      <p>interval = {speed}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import { useRef, useEffect, useState } from 'react'\r\n\r\nconst useStartStop = (callback, delay) => {\r\n  const callbackRef = useRef(null)\r\n  const [intervalId, setIntervalId] = useState(null)\r\n  const [isActive, setIsActive] = useState(false)\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback\r\n  }, [callback])\r\n\r\n  const start = () => {\r\n    if (intervalId !== null) {\r\n      return\r\n    }\r\n    const tick = () => {\r\n      callbackRef.current()\r\n    }\r\n\r\n    let id = setInterval(tick, delay)\r\n    setIntervalId(id)\r\n    setIsActive(true)\r\n  }\r\n\r\n  const stop = () => {\r\n    console.log('stop')\r\n    clearInterval(intervalId)\r\n    setIntervalId(null)\r\n    setIsActive(false)\r\n  }\r\n\r\n  return [start, stop, isActive]\r\n}\r\n\r\nexport default useStartStop\r\n","export class Sort {\r\n  constructor(arr, setArr, type) {\r\n    this.arr = [...arr]\r\n    this.index = 0\r\n    this.iteration = 0\r\n    this.type = type\r\n    this.setArr = setArr\r\n    this.isSorted = false\r\n  }\r\n\r\n  print() {\r\n    console.log(this.arr.map((element) => element.value))\r\n  }\r\n\r\n  newArr(arr) {\r\n    this.arr = [...arr]\r\n    this.isSorted = false\r\n    this.index = 0\r\n    this.iteration = 0\r\n  }\r\n\r\n  setType(type, arr) {\r\n    this.type = type\r\n    this.arr = [...arr]\r\n    this.isSorted = false\r\n    this.index = 0\r\n    this.iteration = 0\r\n  }\r\n\r\n  swap(arr, i1, i2) {\r\n    let temp = { ...arr[i1] }\r\n\r\n    arr[i1].id = arr[i2].id\r\n    arr[i1].value = arr[i2].value\r\n\r\n    arr[i2].id = temp.id\r\n    arr[i2].value = temp.value\r\n  }\r\n\r\n  checkSorted() {\r\n    this.isSorted = true\r\n    for (let i = 0; i < this.arr.length - 1; i++) {\r\n      if (this.arr[i].value > this.arr[i + 1].value) {\r\n        this.isSorted = false\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  iterate() {\r\n    if (this.isSorted) {\r\n      return\r\n    }\r\n\r\n    if (this.index === this.arr.length - 1) {\r\n      this.index = 0\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'bubble': {\r\n        if (this.arr[this.index].value >= this.arr[this.index + 1].value) {\r\n          const newArr = [...this.arr]\r\n          this.swap(newArr, this.index, this.index + 1)\r\n          this.setArr(newArr)\r\n\r\n          this.iteration++\r\n        }\r\n        break\r\n      }\r\n      case 'selection': {\r\n        let minIndex = this.index\r\n        for (let i = this.index + 1; i < this.arr.length; i++) {\r\n          if (this.arr[i].value < this.arr[minIndex].value) {\r\n            minIndex = i\r\n          }\r\n          this.iteration++\r\n        }\r\n\r\n        const newArr = [...this.arr]\r\n        this.swap(newArr, minIndex, this.index)\r\n        this.setArr(newArr)\r\n        break\r\n      }\r\n      case 'insertion': {\r\n        if (this.index === 0) {\r\n          this.index = 1\r\n        }\r\n        const newArr = [...this.arr]\r\n\r\n        for (let i = this.index; i >= 0; i--) {\r\n          this.iteration++\r\n          if (newArr[i + 1].value < newArr[i].value) {\r\n            this.swap(newArr, i, i + 1)\r\n          } else {\r\n            break\r\n          }\r\n        }\r\n\r\n        this.setArr(newArr)\r\n        break\r\n      }\r\n      default: {\r\n        break\r\n      }\r\n    }\r\n\r\n    this.index++\r\n    this.checkSorted()\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Bars from '../Components/Bars'\r\nimport Input from '../Components/Input'\r\nimport useStartStop from '../Hooks/useStartStop'\r\nimport '../scss/styles.scss'\r\nimport { generateId } from '../Utils/generateId'\r\nimport { Sort } from '../Utils/sort'\r\n\r\nconst DEFAULT_ARRAY = [\r\n  { id: generateId(), value: 7 },\r\n  { id: generateId(), value: 5 },\r\n  { id: generateId(), value: 8 },\r\n  { id: generateId(), value: 4 },\r\n  { id: generateId(), value: 3 },\r\n  { id: generateId(), value: 1 },\r\n  { id: generateId(), value: 2 },\r\n  { id: generateId(), value: 6 },\r\n]\r\n\r\nconst Home = () => {\r\n  const [speed, setSpeed] = useState(300)\r\n  const [type, setType] = useState('bubble')\r\n  const [arr, setArr] = useState(DEFAULT_ARRAY)\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [sort, setSort] = useState(new Sort(arr, setArr, type))\r\n  const [start, stop, isActive] = useStartStop(() => {\r\n    sort.iterate()\r\n  }, speed)\r\n\r\n  useEffect(() => {\r\n    if (sort.isSorted) {\r\n      stop()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [arr])\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      stop()\r\n    }\r\n    sort.setType(type, arr)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [type])\r\n\r\n  const updateArray = (newArr) => {\r\n    if (isActive) {\r\n      stop()\r\n    }\r\n    setArr(newArr)\r\n    sort.newArr(newArr)\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='header'>Sorting Visualized</div>\r\n      <Input\r\n        arr={arr}\r\n        setArr={setArr}\r\n        updateArray={updateArray}\r\n        speed={speed}\r\n        setSpeed={setSpeed}\r\n        type={type}\r\n        setType={setType}\r\n      />\r\n      <Bars arr={arr} setArr={setArr} />\r\n      <button onClick={start}>start</button>\r\n      <button onClick={stop}>stop</button>\r\n      <div>iterations = {sort.iteration + 1}</div>\r\n      <div>{sort.isSorted ? 'Sorted' : ''}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport Home from './Pages/Home'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}